<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.blog.dao.ArticleDao">
    <!--目的:为dao接口方法提供sql语句配置
    即针对dao接口中的方法编写我们的sql语句-->
    <resultMap id="articleMap" type="com.ssm.blog.entity.Article">
        <id column="articleId" property="articleId"/>
        <result column="title" property="title"/>
        <result column="saveTime" property="saveTime"/>
        <result column="publishTime" property="publishTime"/>
        <result column="summaryContent" property="summaryContent"/>
        <result column="markdownContent" property="markdownContent"/>
        <result column="htmlContent" property="htmlContent"/>
    </resultMap>
    <resultMap id="articleAndCategoryAndTagMap" type="com.ssm.blog.entity.Article" extends="articleMap">
        <collection property="categories" ofType="com.ssm.blog.entity.Category" resultMap="com.ssm.blog.dao.CategoryDao.categoryMap"/>
        <collection property="tags" ofType="com.ssm.blog.entity.Tag" resultMap="com.ssm.blog.dao.TagDao.tagMap" />
    </resultMap>


    <insert id="addArticle" parameterType="Article">
        INSERT INTO
            article(articleId,saveTime,publishTime,title,summaryContent,markdownContent,htmlContent)
        VALUES
            (#{article.articleId},#{article.saveTime},#{article.publishTime},#{article.title},#{article.summaryContent},#{article.markdownContent},#{article.htmlContent})
    </insert>

    <select id="get" resultMap="articleAndCategoryAndTagMap" parameterType="java.lang.Long">
        SELECT
            *
        FROM
            article a
        LEFT JOIN tag t ON a.articleId = t.articleId
        LEFT JOIN article_category a_t ON a.articleId = a_t.article_id
        LEFT JOIN category c ON a_t.category_id = c.categoryId
        WHERE
            a.articleId = #{articleId}
    </select>

    <select id="getTotalCount" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT
            count(*)
        FROM
            article a
        <where>
            <if test="searchParam != null and searchParam != ''"> a.title like '%' #{searchParam} '%'</if>
        </where>

    </select>

    <select id="list" resultMap="articleAndCategoryAndTagMap">
        SELECT
            *
        FROM
            (
                SELECT * FROM
                    article a
                <where><if test="searchParam != null and searchParam != ''"> article.title like '%' #{searchParam} '%'</if></where>
                ORDER BY a.publishTime DESC , a.saveTime DESC
                LIMIT #{offsetCount}, #{pageSize}
            ) a
        LEFT JOIN article_category a_t ON a.articleId = a_t.article_id
        LEFT JOIN category t ON t.categoryId = a_t.category_id
        ORDER BY a.publishTime DESC , a.saveTime DESC
    </select>

    <select id="ifExistTitle" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT
            count(*)
        FROM
            article a
        WHERE
            a.title = #{title}
    </select>


    <update id="update" parameterType="Article">
        UPDATE
            article a
        <trim prefix="set" suffixOverrides=",">
            <if test="article.saveTime != null">a.saveTime = #{article.saveTime},</if>
            <if test="article.title != null">a.title = #{article.title},</if>
            <if test="article.summaryContent != null">a.summaryContent = #{article.summaryContent},</if>
            <if test="article.markdownContent != null">a.markdownContent = #{article.markdownContent},</if>
            <if test="article.htmlContent != null">a.htmlContent = #{article.htmlContent},</if>
        </trim>
        WHERE
            a.articleId = #{article.articleId}
    </update>
</mapper>