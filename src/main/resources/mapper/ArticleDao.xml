<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.blog.dao.ArticleDao">
    <!--目的:为dao接口方法提供sql语句配置
    即针对dao接口中的方法编写我们的sql语句-->
    <resultMap id="articleMap" type="com.ssm.blog.entity.Article">
        <id column="articleId" property="articleId"/>
        <result column="title" property="title"/>
        <result column="status" property="status"/>
        <result column="saveTime" property="saveTime"/>
        <result column="publishTime" property="publishTime"/>
        <result column="summaryMarkdownContent" property="summaryMarkdownContent" javaType="string" jdbcType="VARCHAR"/>
        <result column="summaryHtmlContent" property="summaryHtmlContent" javaType="string" jdbcType="VARCHAR"/>
        <result column="markdownContent" property="markdownContent" javaType="string" jdbcType="VARCHAR"/>
        <result column="htmlContent" property="htmlContent" javaType="string" jdbcType="VARCHAR"/>
        <result column="prevArticleId" property="prevArticleId"/>
        <result column="prevTitle" property="prevTitle"/>
        <result column="nextArticleId" property="nextArticleId"/>
        <result column="nextTitle" property="nextTitle"/>
        <result column="commentNum" property="commentNum"/>
    </resultMap>
    <resultMap id="completeArticle" type="com.ssm.blog.entity.Article" extends="articleMap">
        <collection property="categories" ofType="com.ssm.blog.entity.Category"
                    resultMap="com.ssm.blog.dao.CategoryDao.categoryMap"/>
        <collection property="columns" ofType="com.ssm.blog.entity.Column"
                    resultMap="com.ssm.blog.dao.ColumnDao.columnMap"/>
        <collection property="tags" ofType="com.ssm.blog.entity.Tag" resultMap="com.ssm.blog.dao.TagDao.tagMap"/>
    </resultMap>


    <insert id="addArticle" parameterType="Article">
        INSERT INTO
        article (articleId, status, saveTime, publishTime, title, htmlContent, summaryHtmlContent)
        VALUES
        (#{article.articleId}, #{article.status}, #{article.saveTime}, #{article.publishTime}, #{article.title}, #{article.htmlContent}, #{article.summaryHtmlContent})
    </insert>

    <!--<insert id="addArticle" parameterType="Article">
        INSERT INTO
            article (articleId, status, saveTime, publishTime, title, summaryMarkdownContent, summaryHtmlContent, markdownContent, htmlContent)
        VALUES
            (#{article.articleId}, #{article.status}, #{article.saveTime}, #{article.publishTime}, #{article.title},
             #{article.summaryMarkdownContent}, #{article.summaryHtmlContent}, #{article.markdownContent},
             #{article.htmlContent})
    </insert>-->

    <select id="getArticleByPage" resultMap="completeArticle" parameterType="java.lang.Integer">
        SELECT a.articleId,a.saveTime,a.publishTime,a.title,a.summaryHtmlContent, t.*, c.*, com.commentNum
        FROM
            (
                SELECT *
                FROM article a
                WHERE a.status = 1
                ORDER BY a.publishTime DESC, a.saveTime DESC
                LIMIT #{pageIndex}, #{pageSize}
            ) a
        LEFT JOIN tag t ON a.articleId = t.articleId
        LEFT JOIN article_category a_c ON a.articleId = a_c.article_id
        LEFT JOIN category c ON a_c.category_id = c.categoryId
        LEFT JOIN (
                      SELECT
                          com.articleId, COUNT(*) AS commentNum
                      FROM
                          `comment` com GROUP BY com.articleId
                  ) com ON a.articleId = com.articleId
        ORDER BY a.publishTime DESC, a.saveTime DESC
    </select>

    <select id="getArticleById" resultMap="completeArticle" parameterType="java.lang.Long">
        SELECT
            a.*,t.*,c.*,col.*,
            (
                SELECT a.articleId
                FROM
                    article a
                WHERE
                    a.`status` = 1
                    AND a.publishTime &lt; (
                        SELECT a.publishTime
                        FROM
                            article a
                        WHERE
                            a.articleId = #{articleId}
                    )
                ORDER BY
                    a.publishTime DESC
                LIMIT 1
            ) AS 'prevArticleId',
            (
                SELECT a.title
                FROM
                    article a
                WHERE
                    a.`status` = 1
                    AND a.publishTime &lt; (
                        SELECT a.publishTime
                        FROM
                            article a
                        WHERE
                            a.articleId = #{articleId}
                    )
                ORDER BY
                    a.publishTime DESC
                LIMIT 1
            ) AS 'prevTitle',
            (
                SELECT a.articleId
                FROM
                    article a
                WHERE
                    a.`status` = 1
                    AND a.publishTime &gt; (
                        SELECT a.publishTime
                        FROM
                            article a
                        WHERE
                            a.articleId = #{articleId}
                    )
                ORDER BY
                    a.publishTime ASC
                LIMIT 1
            ) AS 'nextArticleId',
            (
                SELECT a.title
                FROM
                    article a
                WHERE
                    a.`status` = 1
                    AND a.publishTime &gt; (
                        SELECT a.publishTime
                        FROM
                            article a
                        WHERE
                            a.articleId = #{articleId}
                    )
                ORDER BY
                    a.publishTime ASC
                LIMIT 1
            ) AS 'nextTitle'
        FROM
            article a
            LEFT JOIN tag t ON a.articleId = t.articleId
            LEFT JOIN article_category a_t ON a.articleId = a_t.article_id
            LEFT JOIN category c ON a_t.category_id = c.categoryId
            LEFT JOIN article_column a_c ON a.articleId = a_c.article_id
            LEFT JOIN `column` col ON a_c.column_id = col.columnId
        WHERE
            a.articleId = #{articleId}
    </select>

    <select id="getTotalCount" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT
        count(*)
        FROM
        article a
        <where>
            <if test="searchParam != null and searchParam != ''">a.title like '%' #{searchParam} '%'</if>
            <if test="status != null"> and a.`status` = #{status}</if>
        </where>

    </select>

    <select id="list" resultMap="completeArticle">
        SELECT
        *
        FROM
        (
            SELECT * FROM
                article a
            <where>
                <if test="searchParam != null and searchParam != ''">a.title like '%' #{searchParam} '%'</if>
            </where>
            ORDER BY a.publishTime DESC , a.saveTime DESC
            LIMIT #{offsetCount}, #{pageSize}
        ) a
        LEFT JOIN article_category a_t ON a.articleId = a_t.article_id
        LEFT JOIN category t ON t.categoryId = a_t.category_id
        ORDER BY a.publishTime DESC, a.saveTime DESC
    </select>

    <select id="getAdminArticleByPage" resultMap="completeArticle">
        SELECT
        *
        FROM
        (
            SELECT * FROM
                article a
            <where>
                <if test="searchParam != null and searchParam != ''">a.title like '%' #{searchParam} '%'</if>
                <if test="status != null"> and a.`status` = #{status}</if>
            </where>
            ORDER BY a.publishTime DESC , a.saveTime DESC
            LIMIT #{offsetCount}, #{pageSize}
        ) a
        LEFT JOIN article_category a_t ON a.articleId = a_t.article_id
        LEFT JOIN category t ON t.categoryId = a_t.category_id
        ORDER BY a.publishTime DESC, a.saveTime DESC
    </select>

    <select id="ifExistTitle" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT count(*)
        FROM
            article a
        WHERE
            a.title = #{title}
    </select>


    <update id="update" parameterType="Article">
        UPDATE
        article a
        <trim prefix="set" suffixOverrides=",">
            <if test="article.saveTime != null">a.saveTime = #{article.saveTime},</if>
            <if test="article.publishTime != null">a.publishTime = #{article.publishTime},</if>
            <if test="article.title != null">a.title = #{article.title},</if>
            <if test="article.status != null">a.status = #{article.status},</if>
            <if test="article.summaryHtmlContent != null and article.summaryHtmlContent != '' ">a.summaryHtmlContent = #{article.summaryHtmlContent},</if>
            <if test="article.htmlContent != null and article.htmlContent != '' ">a.htmlContent = #{article.htmlContent},</if>
        </trim>
        WHERE
        a.articleId = #{article.articleId}
    </update>

    <!--<update id="update" parameterType="Article">
        UPDATE
        article a
        <trim prefix="set" suffixOverrides=",">
            <if test="article.saveTime != null">a.saveTime = #{article.saveTime},</if>
            <if test="article.saveTime == article.publishTime">a.publishTime = #{article.publishTime},</if>
            <if test="article.title != null">a.title = #{article.title},</if>
            <if test="article.summaryMarkdownContent != null">a.summaryMarkdownContent =
                #{article.summaryMarkdownContent},
            </if>
            <if test="article.summaryHtmlContent != null">a.summaryHtmlContent = #{article.summaryHtmlContent},</if>
            <if test="article.markdownContent != null">a.markdownContent = #{article.markdownContent},</if>
            <if test="article.htmlContent != null">a.htmlContent = #{article.htmlContent},</if>
            <if test="article.status != null">a.status = #{article.status},</if>
        </trim>
        WHERE
        a.articleId = #{article.articleId}
    </update>-->

    <select id="getColumnArticleByPage" resultMap="completeArticle">
        SELECT a.articleId,a.saveTime,a.publishTime,a.title,a.summaryHtmlContent, t.*, c.*, com.commentNum
        FROM
            (
                SELECT *
                FROM
                    article a,
                    `column` col,
                    article_column a_c
                WHERE
                    a.status = 1
                    AND a.articleId = a_c.article_id
                    AND a_c.column_id = col.columnId
                    AND columnName = #{column}
                ORDER BY a.publishTime DESC, a.saveTime DESC
                LIMIT #{pageIndex}, #{pageSize}
            ) a
            LEFT JOIN tag t ON a.articleId = t.articleId
            LEFT JOIN article_category a_t ON a.articleId = a_t.article_id
            LEFT JOIN category c ON c.categoryId = a_t.category_id
            LEFT JOIN (
                          SELECT
                              com.articleId,
                              COUNT(*) AS commentNum
                          FROM
                              `comment` com
                          GROUP BY
                              com.articleId
                      ) com ON a.articleId = com.articleId
        ORDER BY a.publishTime DESC, a.saveTime DESC
    </select>

    <select id="searchArticleByPage" resultMap="completeArticle">
        SELECT a.articleId,a.saveTime,a.publishTime,a.title,a.summaryHtmlContent, t.*, com.commentNum
        FROM
            (
                SELECT *
                FROM
                    article a
                WHERE
                    a.status = 1
                    AND
                    (
                        a.title LIKE '%' #{keyword} '%'
                        OR a.articleId IN
                           (
                               SELECT t.articleId
                               FROM tag t
                               WHERE t.tagName LIKE '%' #{keyword} '%'
                           )
                        OR a.articleId IN
                           (
                               SELECT a_c.article_id
                               FROM article_category a_c, category c
                               WHERE a_c.category_id = c.categoryId AND c.categoryName LIKE '%' #{keyword} '%'
                           )
                        OR a.articleId IN
                           (
                               SELECT a_col.article_id
                               FROM article_column a_col, `column` col
                               WHERE a_col.column_id = col.columnId AND col.columnName LIKE '%' #{keyword} '%'
                           )
                    )
                ORDER BY a.publishTime DESC, a.saveTime DESC
                LIMIT #{pageIndex}, #{pageSize}
            ) a
            LEFT JOIN tag t ON a.articleId = t.articleId
            LEFT JOIN (
                          SELECT
                              com.articleId,
                              COUNT(*) AS commentNum
                          FROM
                              `comment` com
                          GROUP BY
                              com.articleId
                      ) com ON a.articleId = com.articleId
        ORDER BY a.publishTime DESC, a.saveTime DESC
    </select>

    <select id="getCategoryArticleByPage" resultMap="completeArticle">
        SELECT a.articleId,a.saveTime,a.publishTime,a.title,a.summaryHtmlContent, t.*, c.*, com.commentNum
        FROM
            (
                SELECT a.*
                FROM article a, article_category a_c, category c
                WHERE a.status = 1
                      AND a.articleId = a_c.article_id
                      AND a_c.category_id = c.categoryId
                      AND c.categoryName = #{category}
                ORDER BY a.publishTime DESC, a.saveTime DESC
                LIMIT #{pageIndex}, #{pageSize}
            ) a
            LEFT JOIN tag t ON a.articleId = t.articleId
            LEFT JOIN article_category a_c ON a.articleId = a_c.article_id
            LEFT JOIN category c ON c.categoryId = a_c.category_id
            LEFT JOIN (
                          SELECT
                              com.articleId,
                              COUNT(*) AS commentNum
                          FROM
                              `comment` com
                          GROUP BY
                              com.articleId
                      ) com ON a.articleId = com.articleId
        ORDER BY a.publishTime DESC, a.saveTime DESC
    </select>

    <select id="getArticleArchives" resultType="com.ssm.blog.dto.Archive">
        SELECT
            YEAR(a.publishTime)  AS 'year',
            MONTH(a.publishTime) AS 'month',
            COUNT(*)             AS 'count'
        FROM
            article a
        WHERE a.`status` = 1
        GROUP BY YEAR(a.publishTime) DESC, MONTH(a.publishTime) DESC
    </select>

    <select id="getArchivesArticleByPage" resultMap="completeArticle">
        SELECT a.articleId,a.saveTime,a.publishTime,a.title,a.summaryHtmlContent, t.*, com.commentNum
        FROM
            (
                SELECT *
                FROM
                    article a
                WHERE
                    a.`status` = 1
                    AND date_format(a.publishTime, '%Y-%m') = #{timerange}
                ORDER BY
                    a.publishTime DESC
                LIMIT #{pageIndex}, #{pageSize}
            ) a
            LEFT JOIN tag t ON a.articleId = t.articleId
            LEFT JOIN (
                          SELECT
                              com.articleId,
                              COUNT(*) AS commentNum
                          FROM
                              `comment` com
                          GROUP BY
                              com.articleId
                      ) com ON a.articleId = com.articleId
        ORDER BY a.publishTime DESC, a.saveTime DESC
    </select>

    <select id="getAllArticleIdList" resultMap="completeArticle">
        SELECT a.articleId
        FROM
            article a
        WHERE
            a.`status` = 1
        ORDER BY
            a.publishTime DESC
    </select>

    <delete id="deleteArticleById" parameterType="java.lang.Long">
        DELETE FROM
        article
        WHERE
        articleId = #{articleId}
    </delete>

    <select id="hasPublishTime" parameterType="java.lang.Long" resultType="java.util.Date">
        SELECT publishTime
        FROM article
        WHERE articleId = #{articleId}
    </select>
</mapper>